<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 配置组件扫描，作用：扫描com.sc包中的类的组件注解，注册bean对象 -->
    <context:component-scan base-package="com.sc"></context:component-scan>

    <!-- 1、配置数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" 
		    value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/db190203">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<!-- 2、配置本地会话工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 1、注入数据源 -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 2、配置自身属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!--3、配置映射文件 -->
		<property name="mappingDirectoryLocations" 
		          value="classpath:com/sc/entity"></property>
	</bean>
	
	<!-- 3、配置模板 -->
    <bean class="org.springframework.orm.hibernate4.HibernateTemplate" 
         id="hibernateTemplate">
         <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <!-- 4、配置自己的dao（改为组件注解配置） -->

	
	<!-- 事务的配置 -->
	<!-- 1、配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 2、配置事务属性 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
	   <tx:attributes>
	       <!-- 查询方法，不需要事务，并为只读 -->
	      <tx:method name="find*" propagation="NOT_SUPPORTED" read-only="true"/>
	      <tx:method name="select*" propagation="NOT_SUPPORTED" read-only="true"/>
	      <tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true"/>
	      <tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true"/>
	      <!-- 其他方法，需要事务，并为可读写 -->
	      <tx:method name="*" propagation="REQUIRED" read-only="false"/>
	   </tx:attributes>
	</tx:advice>
	<!-- 3、配置aop -->
	<aop:config>
	   <aop:pointcut expression="execution(* com.sc.service..*.*(..))" id="pc"/>
	   <aop:advisor advice-ref="txadvice" pointcut-ref="pc"/>
	</aop:config>
	
</beans>